#include <SDL2/SDL.h>
#include <SDL2/SDL_image.h>
#include <iostream>

#define WIDTH 1280
#define HEIGHT 720

bool running, fullscreen;

SDL_Renderer* renderer;
SDL_Window* window;

int frameCount, timerFPS, lastFrame, fps;

void update(){
    if(fullscreen) SDL_SetWindowFullscreen(window, SDL_WINDOW_FULLSCREEN);
    if(!fullscreen) SDL_SetWindowFullscreen(window, 0);

}

void input(){
    SDL_Event e;
    while(SDL_PollEvent(&e)) {
        if(e.type == SDL_QUIT) running=false;
    }
    const Uint8 *keystates = SDL_GetKeyboardState(NULL);
    if (keystates[SDL_SCANCODE_ESCAPE]) running=false;
    if (keystates[SDL_SCANCODE_F11]) fullscreen=!fullscreen;
}

void draw(){
    // draw background
    SDL_SetRenderDrawColor(renderer, 40, 42, 40, 255);
    SDL_Rect rect;
    rect.x = rect.y = 0;
    rect.w = WIDTH;
    rect.h = HEIGHT;
    SDL_RenderFillRect(renderer, &rect);

    
    int channel_height = 20;
    int channel_width = 60;
    int num_ticks = 40;
    int num_channels = 12;
    int xstart = 20;
    int xend = 20 + channel_width * (num_channels-1);

    // draw sequencer bg
    SDL_SetRenderDrawColor(renderer, 30, 32, 30, 255);
    SDL_Rect rect_seq_bg;
    rect_seq_bg.x = 20;
    rect_seq_bg.y = 20;
    rect_seq_bg.w = xend - xstart;
    rect_seq_bg.h = HEIGHT - 2*20;
    SDL_RenderFillRect(renderer, &rect_seq_bg);


    // draw lines
    SDL_SetRenderDrawColor(renderer, 78, 78, 78, 255);
    for (int i=0; i < num_channels; i++){
        int xpos = 20 + i * channel_width;
        SDL_RenderDrawLine(renderer, xpos, 20, xpos, HEIGHT-20);
    }

    for (int i=0; i < num_ticks; i++){
        int ypos = 20 + i * channel_height;
        SDL_RenderDrawLine(renderer, xstart, ypos, xend, ypos);
    }

    frameCount++;
    int timerFPS = SDL_GetTicks() - lastFrame;
    if(timerFPS<(1000/60)){
        SDL_Delay((1000/60)-timerFPS);
    }
    SDL_RenderPresent(renderer);

}


int main(int argc, char* args[])
{
    running = true;
    fullscreen = false;
    static int lastTime = 0;
    if (SDL_Init(SDL_INIT_EVERYTHING) < 0) 
        std::cout << "Failed at SDL_init()\n";
    if (SDL_CreateWindowAndRenderer(WIDTH, HEIGHT, 0, &window, &renderer) < 0)
        std::cout << "Failed at SDL_Create window()\n";

    SDL_SetWindowTitle(window, "Air Tracker");
    SDL_ShowCursor(1);
    SDL_SetHint(SDL_HINT_RENDER_SCALE_QUALITY, "2");
    
    while(running){

        lastFrame = SDL_GetTicks();

        if (lastFrame >= (lastTime + 1000)) {
            lastTime = lastFrame;
            fps = frameCount;
            frameCount = 0;
        }
        // std::cout << fps << std::endl;

        update();
        input();
        draw();
    }

    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();

    return 0;
}